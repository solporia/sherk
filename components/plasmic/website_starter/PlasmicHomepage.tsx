// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: adduS3qSrAzBwFfsRSGTej
// Component: _hzd1P7usq90

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: adduS3qSrAzBwFfsRSGTej/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: _hzd1P7usq90/css

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  h4?: Flex__<"h4">;
  text?: Flex__<"div">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__ddcTb)}>
            <div className={classNames(projectcss.all, sty.freeBox__mtKun)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fgjqI)}
              >
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__tqqRs
                  )}
                  component={Link}
                  href={"https://twitter.com/BEBESHERKSOL"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__f5X6Q)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"42px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/fb1F8033B17773353B14Fc77C8C5A259Svg.svg",
                      fullWidth: 166,
                      fullHeight: 150,
                      aspectRatio: 1.105932
                    }}
                  />
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__djpAw
                  )}
                  component={Link}
                  href={"https://twitter.com/BEBESHERKSOL"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__cGEs)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"42px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/d69C359Aa95651176Adb46Fd399F3D46Svg.svg",
                      fullWidth: 167,
                      fullHeight: 150,
                      aspectRatio: 1.111111
                    }}
                  />
                </PlasmicLink__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pmTuQ)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__aQ5K0)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__zosHy
                    )}
                  >
                    {"BUY NOW!"}
                  </h2>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___71UXf)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__s1Rmd
                    )}
                  >
                    {"CHART"}
                  </h2>
                </div>
              </Stack__>
            </div>
          </div>
          <section className={classNames(projectcss.all, sty.section__auKp0)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__uyqvY)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/website_starter/images/shrekpng.png",
                fullWidth: 785,
                fullHeight: 346,
                aspectRatio: undefined
              }}
            />

            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__qo9U
              )}
            >
              {"HI, I\u2019M $SHERK!"}
            </h2>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__wsErk)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"250px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/website_starter/images/_1Png.png",
                fullWidth: 600,
                fullHeight: 600,
                aspectRatio: undefined
              }}
            />
          </section>
          <section className={classNames(projectcss.all, sty.section__ztBdv)}>
            <div className={classNames(projectcss.all, sty.columns___2SOn8)}>
              <div className={classNames(projectcss.all, sty.column___1A2Dx)}>
                <div className={classNames(projectcss.all, sty.freeBox___3JF4)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__zdPpj
                    )}
                  >
                    {
                      "About $SHERK\n\nBEBE $SHERK DOO-DOO DOO-DOO DOO-DOO~ MOME $SHERK DOO-DOO DOO-DOO DOO-DOO~"
                    }
                  </h3>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__oYhWo)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__aNiyt)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"80%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/website_starter/images/dhrekpng.png",
                    fullWidth: 600,
                    fullHeight: 600,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__g43Hz)}>
            <div className={classNames(projectcss.all, sty.freeBox__e32Yc)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__yat9N
                )}
              >
                {"TOKENOMICS"}
              </h2>
              <div className={classNames(projectcss.all, sty.columns__bwSx5)}>
                <div className={classNames(projectcss.all, sty.column__tdMaz)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3___0SvgN
                    )}
                  >
                    {"SUPPLY: 100M"}
                  </h3>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__nj0Ne
                    )}
                  >
                    {"TAX 0/0"}
                  </h3>
                </div>
                <div className={classNames(projectcss.all, sty.column__ef9Vj)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0BcLh)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___9Qxt0)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/pinkshrekpng.png",
                        fullWidth: 773,
                        fullHeight: 426,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column___97VhE)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__yNVyj
                    )}
                  >
                    {"LP: BURNT"}
                  </h3>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__aZaEy
                    )}
                  >
                    {"$SHREK"}
                  </h3>
                </div>
              </div>
              <h4
                data-plasmic-name={"h4"}
                data-plasmic-override={overrides.h4}
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4
                )}
              >
                {"CONTRACT ADRESS"}
              </h4>
              <div className={classNames(projectcss.all, sty.freeBox__z0Yte)}>
                <div
                  data-plasmic-name={"text"}
                  data-plasmic-override={overrides.text}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text
                  )}
                >
                  {"2kJ2zzZoU7mgskrXHSe6fHgC7yLd4T9rbyDwchBuogB5"}
                </div>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__rzcS1)}>
            <div className={classNames(projectcss.all, sty.freeBox__laHM)}>
              <div className={classNames(projectcss.all, sty.freeBox__iD7O9)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__owrMq)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/website_starter/images/a63F7Bbdcb873C7D061621748B71Db7Dpng.png",
                    fullWidth: 1010,
                    fullHeight: 367,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__uahGx
                  )}
                >
                  {
                    "Join our amazing community to stay updated with the project\u2019s development and $SHERK growth. Hodl $SHERK"
                  }
                </h3>
              </div>
            </div>
          </section>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h4", "text"],
  h4: ["h4"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  h4: "h4";
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h4: makeNodeComponent("h4"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
